// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  role      UserRole @default(Applicant)
  createdAt DateTime @default(now()) @map("created_at")
  updateAt  DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Resume {
  id        Int          @id @default(autoincrement())
  athorId   Int          @map("athor_id")
  title     String
  content   String       @db.Text
  status    ResumeStatus @default(Apply)
  createdAt DateTime     @default(now()) @map("created_at")
  updatedAt DateTime     @updatedAt @map("updated_at")

  @@map("resumes")
}

enum UserRole {
  Applicant
  Recruiter
}

enum ResumeStatus {
  Apply
  Drop
  Pass
  Interview1
  Interview2
  Final_pass
}
